{"ast":null,"code":"var _jsxFileName = \"/Users/yatishgoel/Desktop/candidate_test/timestamped-values-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { fetchData } from './api';\nimport ChartComponent from './components/ChartComponent';\nimport Loading from './components/Loading';\nimport ErrorAlert from './components/ErrorAlert';\nimport { Button, Container, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [nextPage, setNextPage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    handleFetchData('http://localhost:8000/candidate_test/fronted/');\n  }, []);\n  const handleFetchData = async url => {\n    setLoading(true);\n    try {\n      const response = await fetchData(url);\n      setData(prevData => {\n        if (prevData) {\n          return {\n            ...response.data,\n            results: [...prevData.results, ...response.data.results]\n          };\n        }\n        return response.data;\n      });\n      setNextPage(response.data.next);\n    } catch (err) {\n      setError('Failed to fetch data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadMore = () => {\n    if (nextPage) {\n      handleFetchData(nextPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Timestamped Values Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), data && !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChartComponent, {\n        data: data.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), nextPage && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: loadMore,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : !loading ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3ixaivrOEZecbMVZ1wlyvL7CXZM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchData","ChartComponent","Loading","ErrorAlert","Button","Container","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","nextPage","setNextPage","error","setError","loading","setLoading","handleFetchData","url","response","prevData","results","next","err","loadMore","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","message","color","onClick","_c","$RefreshReg$"],"sources":["/Users/yatishgoel/Desktop/candidate_test/timestamped-values-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { fetchData } from './api';\nimport ChartComponent from './components/ChartComponent';\nimport Loading from './components/Loading';\nimport ErrorAlert from './components/ErrorAlert';\nimport { Button, Container, Typography } from '@mui/material';\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [nextPage, setNextPage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    handleFetchData('http://localhost:8000/candidate_test/fronted/');\n  }, []);\n\n  const handleFetchData = async (url) => {\n    setLoading(true);\n    try {\n      const response = await fetchData(url);\n      setData(prevData => {\n        if (prevData) {\n          return {\n            ...response.data,\n            results: [...prevData.results, ...response.data.results],\n          };\n        }\n        return response.data;\n      });\n      setNextPage(response.data.next);\n    } catch (err) {\n      setError('Failed to fetch data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadMore = () => {\n    if (nextPage) {\n      handleFetchData(nextPage);\n    }\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Timestamped Values Visualization\n      </Typography>\n      {error && <ErrorAlert message={error} />}\n      {loading && <Loading />}\n      {data && !loading ? (\n        <>\n          <ChartComponent data={data.results} />\n          {nextPage && (\n            <Button variant=\"contained\" color=\"primary\" onClick={loadMore}>\n              Load More\n            </Button>\n          )}\n        </>\n      ) : !loading ? (\n        <Typography>No data available</Typography>\n      ) : null}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdsB,eAAe,CAAC,+CAA+C,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAOC,GAAG,IAAK;IACrCF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMvB,SAAS,CAACsB,GAAG,CAAC;MACrCR,OAAO,CAACU,QAAQ,IAAI;QAClB,IAAIA,QAAQ,EAAE;UACZ,OAAO;YACL,GAAGD,QAAQ,CAACV,IAAI;YAChBY,OAAO,EAAE,CAAC,GAAGD,QAAQ,CAACC,OAAO,EAAE,GAAGF,QAAQ,CAACV,IAAI,CAACY,OAAO;UACzD,CAAC;QACH;QACA,OAAOF,QAAQ,CAACV,IAAI;MACtB,CAAC,CAAC;MACFG,WAAW,CAACO,QAAQ,CAACV,IAAI,CAACa,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZT,QAAQ,CAAC,+CAA+C,CAAC;IAC3D,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIb,QAAQ,EAAE;MACZM,eAAe,CAACN,QAAQ,CAAC;IAC3B;EACF,CAAC;EAED,oBACEP,OAAA,CAACH,SAAS;IAAAwB,QAAA,gBACRrB,OAAA,CAACF,UAAU;MAACwB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACZlB,KAAK,iBAAIT,OAAA,CAACL,UAAU;MAACiC,OAAO,EAAEnB;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvChB,OAAO,iBAAIX,OAAA,CAACN,OAAO;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtBtB,IAAI,IAAI,CAACM,OAAO,gBACfX,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA,CAACP,cAAc;QAACY,IAAI,EAAEA,IAAI,CAACY;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACrCpB,QAAQ,iBACPP,OAAA,CAACJ,MAAM;QAAC0B,OAAO,EAAC,WAAW;QAACO,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEV,QAAS;QAAAC,QAAA,EAAC;MAE/D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA,eACD,CAAC,GACD,CAAChB,OAAO,gBACVX,OAAA,CAACF,UAAU;MAAAuB,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,GACxC,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB;AAACvB,EAAA,CA1DQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
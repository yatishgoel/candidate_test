{"ast":null,"code":"var _jsxFileName = \"/Users/yatishgoel/Desktop/candidate_test/timestamped-values-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { fetchData } from './api';\nimport ChartComponent from './components/ChartComponent';\nimport Loading from './components/Loading';\nimport ErrorAlert from './components/ErrorAlert';\nimport Button from './components/Button';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState(null);\n  const [nextPage, setNextPage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    handleFetchData('http://localhost:8000/candidate_test/fronted/');\n  }, []);\n  const handleFetchData = async url => {\n    setLoading(true);\n    try {\n      const response = await fetchData(url);\n      setData(prevData => {\n        if (prevData) {\n          return {\n            ...response.data,\n            results: [...prevData.results, ...response.data.results]\n          };\n        }\n        return response.data;\n      });\n      setNextPage(response.data.next);\n    } catch (err) {\n      setError('Failed to fetch data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadMore = () => {\n    if (nextPage) {\n      handleFetchData(nextPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"Timestamped Values Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), data && !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChartComponent, {\n        data: data.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), nextPage && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: loadMore,\n        text: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : !loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3ixaivrOEZecbMVZ1wlyvL7CXZM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchData","ChartComponent","Loading","ErrorAlert","Button","Container","Title","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","nextPage","setNextPage","error","setError","loading","setLoading","handleFetchData","url","response","prevData","results","next","err","loadMore","children","text","fileName","_jsxFileName","lineNumber","columnNumber","message","onClick","_c","$RefreshReg$"],"sources":["/Users/yatishgoel/Desktop/candidate_test/timestamped-values-frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { fetchData } from './api';\nimport ChartComponent from './components/ChartComponent';\nimport Loading from './components/Loading';\nimport ErrorAlert from './components/ErrorAlert';\nimport Button from './components/Button';\nimport Container from './components/Container';\nimport Title from './components/Title';\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [nextPage, setNextPage] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    handleFetchData('http://localhost:8000/candidate_test/fronted/');\n  }, []);\n\n  const handleFetchData = async (url) => {\n    setLoading(true);\n    try {\n      const response = await fetchData(url);\n      setData(prevData => {\n        if (prevData) {\n          return {\n            ...response.data,\n            results: [...prevData.results, ...response.data.results],\n          };\n        }\n        return response.data;\n      });\n      setNextPage(response.data.next);\n    } catch (err) {\n      setError('Failed to fetch data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadMore = () => {\n    if (nextPage) {\n      handleFetchData(nextPage);\n    }\n  };\n\n  return (\n    <Container>\n      <Title text=\"Timestamped Values Visualization\" />\n      {error && <ErrorAlert message={error} />}\n      {loading && <Loading />}\n      {data && !loading ? (\n        <>\n          <ChartComponent data={data.results} />\n          {nextPage && (\n            <Button onClick={loadMore} text=\"Load More\" />\n          )}\n        </>\n      ) : !loading ? (\n        <p>No data available</p>\n      ) : null}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
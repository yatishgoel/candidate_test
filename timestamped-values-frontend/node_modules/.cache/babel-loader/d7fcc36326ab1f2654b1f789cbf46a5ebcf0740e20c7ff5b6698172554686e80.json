{"ast":null,"code":"var _jsxFileName = \"/Users/yatishgoel/Desktop/candidate_test/timestamped-values-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useFetchData from './hooks/useFetchData';\nimport ChartComponent from './components/ChartComponent';\nimport Loading from './components/Loading';\nimport ErrorAlert from './components/ErrorAlert';\nimport Button from './components/Button';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport Dropdown from './components/Dropdown';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const {\n    data,\n    years,\n    months,\n    loading,\n    error,\n    fetchData,\n    nextPage\n  } = useFetchData(selectedYear, selectedMonth);\n  const handleYearChange = event => {\n    setSelectedYear(event.target.value);\n    fetchData(event.target.value, selectedMonth);\n  };\n  const handleMonthChange = event => {\n    setSelectedMonth(event.target.value);\n    fetchData(selectedYear, event.target.value);\n  };\n  const loadMore = () => {\n    if (nextPage) {\n      fetchData(selectedYear, selectedMonth, nextPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        text: \"Timestamped Values Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          label: \"Year\",\n          options: ['', ...years],\n          value: selectedYear,\n          onChange: handleYearChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          label: \"Month\",\n          options: ['', ...months],\n          value: selectedMonth,\n          onChange: handleMonthChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), data && !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChartComponent, {\n        data: data.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), nextPage && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: loadMore,\n        text: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : !loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UrGXSVp7uIfvqQlaBKhtUZFJfOg=\", false, function () {\n  return [useFetchData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useFetchData","ChartComponent","Loading","ErrorAlert","Button","Container","Title","Dropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","data","years","months","loading","error","fetchData","nextPage","handleYearChange","event","target","value","handleMonthChange","loadMore","children","style","display","justifyContent","alignItems","text","fileName","_jsxFileName","lineNumber","columnNumber","label","options","onChange","message","results","onClick","_c","$RefreshReg$"],"sources":["/Users/yatishgoel/Desktop/candidate_test/timestamped-values-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport useFetchData from './hooks/useFetchData';\nimport ChartComponent from './components/ChartComponent';\nimport Loading from './components/Loading';\nimport ErrorAlert from './components/ErrorAlert';\nimport Button from './components/Button';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport Dropdown from './components/Dropdown';\n\nfunction App() {\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState('');\n  \n  const { data, years,months, loading, error, fetchData, nextPage } = useFetchData(selectedYear, selectedMonth);\n\n  \n\n  const handleYearChange = (event) => {\n    setSelectedYear(event.target.value);\n    fetchData(event.target.value, selectedMonth);\n  };\n\n  const handleMonthChange = (event) => {\n    setSelectedMonth(event.target.value);\n    fetchData(selectedYear, event.target.value);\n  };\n\n  const loadMore = () => {\n    if (nextPage) {\n      fetchData(selectedYear, selectedMonth, nextPage);\n    }\n  };\n\n  return (\n    <Container>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Title text=\"Timestamped Values Visualization\" />\n        <div>\n          <Dropdown label=\"Year\" options={['', ...years]} value={selectedYear} onChange={handleYearChange} />\n          <Dropdown label=\"Month\" options={['', ...months]} value={selectedMonth} onChange={handleMonthChange} />\n        </div>\n      </div>\n      {error && <ErrorAlert message={error} />}\n      {loading && <Loading />}\n      {data && !loading ? (\n        <>\n          <ChartComponent data={data.results} />\n          {nextPage && (\n            <Button onClick={loadMore} text=\"Load More\" />\n          )}\n        </>\n      ) : !loading ? (\n        <p>No data available</p>\n      ) : null}\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}